/*****************************************************************************************************
	Detalle :
	Transformacion de Dimensiones: Producto
	-------------------------------------------------------------------------------------------------
	Fecha       |   Desarrollador   |   Modificación
	-------------------------------------------------------------------------------------------------
	11/03/2016  |   malemos         |   Inicio de Configuración
*****************************************************************************************************/

Producto_temp:
	LOAD
		*
	FROM [..\QVD\PLM\Producto_QV.QVD](qvd);

Mapping
Generos:
	LOAD Distinct
		IdGenero,
		DescripcionGenero
	Resident Producto_temp;

Mapping
Lineas:
	LOAD Distinct
		IdGenero & Right(IdLinea,2),
		DescripcionLinea
	Resident Producto_temp;

Mapping
Sublineas:
	LOAD Distinct
		Right(IdSublinea,2),
		DescripcionSublinea
	Resident Producto_temp;

Mapping
TiposAquision:
	LOAD Distinct
		IdTipoAquision,
		DescripcionTipoAquision
	Resident Producto_temp;

Mapping
TiposProducto:
	LOAD Distinct
		IdTipoProducto,
		DescripcionTipoProducto
	Resident Producto_temp;


Producto:
	LOAD
		IdColeccion&Upper(DescripcionMarca)&IdGenero
		&Right(IdLinea,2)&Right(IdSublinea,2)&IdTipoProducto&IdTipoAquision 		as CK.IdLlaveProducto,
		//***********************************************************************************************
		IdColeccion&Upper(DescripcionMarca)&IdGenero
		&Right(IdLinea,2)&Right(IdSublinea,2)&IdTipoProducto&IdTipoAquision 		as Temp,
		//***********************************************************************************************
		IdPLM 																		as SK.IdPLM,
		CodigoProducto																as SK.Producto,
		Date(___CT)																	as SK.Fecha,
		Date(___CT)																	as Producto.Fecha,
		CodigoProducto																as Producto.IdProducto,
		Costo																		as Producto.Costo,
		Descripcion 																as Producto.Descripcion,	
		DescripcionBanda															as Producto.Banda,
		DescripcionClima 															as Producto.Clima,
		DescripcionColeccion														as Producto.Coleccion,
		DescripcionCuello 															as Producto.Cuello,
		DescripcionError 															as Producto.Error,
		DescripcionGenero 															as Producto.Genero,
		DescripcionGrupoProducto													as Producto.GrupoProducto,
		DescripcionLavado															as Producto.Lavado,
		DescripcionLinea															as Producto.Linea,
		DescripcionManga															as Producto.Manga,
		DescripcionMarca															as Producto.Marca,
		DescripcionNivelModa														as Producto.NivelModa,
		DescripcionPatronista														as Producto.Patronista,
		DescripcionProcedencia														as Producto.Procedencia,
		DescripcionSilueta															as Producto.Silueta,
		DescripcionSublinea															as Producto.Sublinea,
		DescripcionTipoAquision														as Producto.TipoAquision,
		DescripcionTipoPrenda														as Producto.TipoPrenda,
		DescripcionTipoProducto														as Producto.TipoProducto,
		DesUnidadMedidaInventario													as Producto.UnidadMedidaInventario,
		desUnidadMedidaVenta														as Producto.UnidadMedidaVenta,
		Diseñador																	as Producto.Diseñador,
		EstadoAprobacion															as Producto.EstadoAprobacion,
		If(IsNull(EstadoAprobacionComite),'En Desarrollo',EstadoAprobacionComite)	as Producto.EstadoAprobacionComite,	
		EstadoExportacion 															as Producto.EstadoExportacion,
		EstadoSincronizacion 														as Producto.EstadoSincronizacion,
		FechaActualizacion 															as Producto.FechaActualizacion,
		FechaCreacion 																as Producto.FechaCreacion,
		IdBanda 																	as Producto.IdBanda,
		IdClima 																	as Producto.IdClima,
		IdColeccion 																as Producto.IdColeccion,
		IdCuello 																	as Producto.IdCuello,
		IdGenero 																	as Producto.IdGenero,
		IdGrupoProducto 															as Producto.IdGrupoProducto,
		IdLavado 																	as Producto.IdLavado,
		IdGenero & Right(IdLinea,2) 												as Producto.IdLinea,
		IdManga 																	as Producto.IdManga,
		IdMarca 																	as Producto.IdMarca,
		IdNivelModa 																as Producto.IdNivelModa,
		IdPatronista 																as Producto.IdPatronista,
		IdPLM 																		as Producto.IdPLM,
		IdProcedencia 																as Producto.IdProcedencia,
		IdSilueta 																	as Producto.IdSilueta,
		Right(IdSublinea,2)															as Producto.IdSublinea,
		IdTipoAquision 																as Producto.IdTipoAdquisicion,
		IdTipoPrenda 																as Producto.IdTipoPrenda,
		IdTipoProducto 																as Producto.IdTipoProducto,
		LoteAprobado																as Producto.LoteAprobado,
		QST_Style_StatusBOM_enum													as Producto.EstadoBOM,
		QST_StyleAttr_SisproCode_string												as Producto.IdSisproCode,
		Semanaentrada																as Producto.Semanaentrada,
		UnidadMedidaInventario 														as Producto.IdUnidadMedidaInventario,
		UnidadMedidaVenta 															as Producto.IdUnidadMedidaVenta
	Resident Producto_temp;
	Drop Table Producto_temp;
	Concatenate	
	LOAD 
		CK.IdLlaveProducto, 
		Ppto.Marca 												as Producto.Marca,
		Ppto.IdGenero 											as Producto.IdGenero,
		ApplyMap('Generos',Ppto.IdGenero,null()) 				as Producto.Genero,
		Ppto.IdLinea 											as Producto.IdLinea,
		ApplyMap('Lineas',Ppto.IdLinea,null()) 					as Producto.Linea,
		Ppto.IdSubLinea 										as Producto.IdSublinea,
		ApplyMap('Sublineas',Ppto.IdSubLinea,null()) 			as Producto.Sublinea,
		Ppto.IdTipoProducto										as Producto.IdTipoProducto,
		ApplyMap('TiposProducto',Ppto.IdTipoProducto,null())	as Producto.TipoProducto,
		Ppto.IdTipoAdquisicion									as Producto.IdTipoAdquisicion,
		ApplyMap('TiposAquision',Ppto.IdTipoAdquisicion,null())	as Producto.TipoAquision,
		Ppto.IdColeccion										as Producto.IdColeccion, 
		Ppto.IdColeccion										as Producto.Coleccion, 
		'En desarrollo'											as Producto.EstadoAprobacion,
		'En desarrollo'											as Producto.EstadoAprobacionComite
	FROM
	[..\QVD\PLM\_Presupuesto.QVD]
	(qvd)
	Where not Exists(Temp,CK.IdLlaveProducto);

STORE Producto INTO [..\QVD\PLM\_Producto.QVD](qvd);
DROP Field Temp;
DROP TABLE Producto;	
